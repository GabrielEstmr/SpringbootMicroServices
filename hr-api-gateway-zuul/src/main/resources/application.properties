# Eureka: puxa pelo nome e nao pelo HOST
spring.application.name=hr-api-gateway-zuul

# => PORT configuration
# ZUUL - sempre 8765
server.port=8765
# NAO È ALEATORIA AI NAO USA
# eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Eureka server Configuration - tem que falar onde o Eureka vai rodar (PQ ELE É CLIENTE EUREKA TBM)
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Configuração de Timeout => OBS: hystrix tem que ser maior que ribbon!!!
# Pois como default o Eureka espera 1 segundo ai já pega a exception
# Timeout Zuul > Timeout Eureka > timout servicos
# Para testar se esta ok: dar settimeout no servico e ver se ZULL ou Eureka da timeout antes do setado
#Se estora timeout: 
#SE TIMEOUT ESTIVER CONFIGURADO APENAS NO ZULL: HYSTRIX CHAMA CAMINHO AUTERNATIVO DO MICROSERVICO
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=20000


# dEFINIÇÃO rOTAS PARA O ZUUL FAZER ROTIAMENTO DOS MICROSERVICOS
# FICA: {{ _.base_url_apigateway }}/hr-worker/workers    : localhost api gateway/ porta microserviço/porta requisição microservico
#Nome do microservice de worker
zuul.routes.worker.service-id=hr-worker
#Caminho para acessar worker pelo ZUUL
zuul.routes.worker.path=/hr-worker/**

#Nome do microservice de payroll   
zuul.routes.payroll.service-id=hr-payroll
#Caminho para acessar payroll pelo ZUUL
zuul.routes.payroll.path=/hr-payroll/**

